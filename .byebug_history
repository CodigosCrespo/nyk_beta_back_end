c
params["saved_job"]["response"]
params
c
params
c
params
c
params
c
campaign_params
params
c
params
c
writer.outlets
writer.outlet
writer = Writer.last
Writer.last
Writer.last.outlet
writer
o_arr
c
o_arr
c
o_arr
outlet.writers
c
outlet.writers
c
outlet.writers
c
 outlet.writers.where(freelance: true)
c
 outlet.writers.where(freelance: true)
c
 outlet.writers.where(freelance: true)
c
 outlet.writers.where(freelance: true)
c
 outlet.writers.where(freelance: true)
c
outlet.writers.where(freelance: true)
c
o_arr
outlet.writers.where(freelance:true)
outlet
c
  @outlets.each do |outlet| if outlet.writers.where(freelance: true) o_arr.push(outlet.id) end end
outlet.writers.where(freelance: true)
o_arr
c
@outlets.each do |outlet| if outlet.writers.where(freelance: true) puts outlet end end
@outlets.each do |outlet| outlets = outlet.writers.where(freelance: true) end
@outlets.each do |outlet| outlets = outlets.writers.where(freelance: true) end
      @outlets.each do |outlet|
params
@outlets.jobs
@outlets.jobs.writer
@outlets[5].jobs
@outlets[4].jobs
@outlets[3].jobs
@outlets[0].jobs
@outlets[0].includes(:jobs)
@outlet[0].includes(:jobs)
@outlets[5].writers
@outlets[5]
@outlets[4]
@outlets[3]
@outlets[2]
@outlets[1]
@outlets[0].jobs
@outlets[0].writers
@outlets[0].writer
@outlets.jobs
@outlets
Outlet.last
params
c
params
c
filters["hype_m"]
filters[
filters
params
c
@outlets.as_json(:include => {:writers => {:include => {:genre_tags => {:include => {:genre => {only: [:name]}}}}}})
@outlets.as_json(:include => {:writers => {:include => {:genre_tags => {:include => {:genre, only: [:name]}}}}})
@outlets
      }
        }
          }
            }
              :genre, only: [:name]
            :include => {
          :genre_tags => {
        :include => {
      :writers => {
    :include => {
@outlets.as_json(
      }
        }
          }
            }
              :genre, only: [:name]
            :include => {
          :genre_tags => {
        :include => {
      :writers => {
    :include => {
@outlets.as_json(
@outlets
      }
        }
          }
            }
              :genre, only: [:name]
            :include => {
          :genre_tags => {
        :include => {
      :writers => {
    :include => {
.as_json(
      }
        }
          }
            }
              :genre, only: [:name]
            :include => {
          :genre_tags => {
        :include => {
      :writers => {
    :include => {
@outlets.as_json(
      }
        }
          }
            }
              :genre, only: [:name]
            :include => {
          :genre_tags => {
        :include => {
      :writers => {
    :include => {
@outlets.as_json(
      }
        }
          }
            }
              :genre, only: [:name]
            :include => {
          :genre_tags => {
        :include => {
      :writers => {
    :include => {
@outlets..as_json(
@outlets.as_json(include: => { :writers => { :include => {:genre_tags => { :genre => {only: [:name]}} } } })
@outlets.as_json(include: => { :writers => { :include => {:genre_tags => { :genre only: [:name]} } } })
@outlets.as_json(include: => { :writers => { :include => {:genre_tags => { :genre, only: [:name]} } } })
@outlets.as_json(include: => { :writers => {:genre_tags}})
@outlets.as_json(include: => { :writers => {:genre_tags})
      @outlets = @outlets.joins(writers: :genre_tags).where(genre_tags: {genre_id: g_ids_plus_all}).distinct
@outlets.as_json
c
@outlets
c
@outlets
c
params
c
params
c
params
c
params
c
params
c
params
c
@new_outlets
c
JSON.generate(outlets.as_json)
outlets
quit
c
quit
c
outlets
c
outlets
c
outlets
c
outlets
c
outlets
c
outlets
c
outlets
c
outlets
c
@outlet
c
outlets
c
outlets
c
outlets
c
response
c
followed_up
c
SavedJob.last
params[:saved_job]["response"]
params[:saved_job]
params
c
params
c
params[:saved_job]["response"]
params[:saved_job][
params[:saved_job]
params
c
params[:saved_job]
params
c
params
c
params[:saved_job]
params[:id]
c
@saved_job
c
@saved_job
follow_up
response
params
c
params
c
current_user.sign_in_count
current_user
c
@new_outlets
c
@new_outlets
c
current_user.trial
current_user
c
@new_outlets
