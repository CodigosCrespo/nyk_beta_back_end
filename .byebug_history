c
writer_params[:jobs_attributes]["0"][:presstype_tags_attributes]
writer_params[:jobs_attributes]["0"]
writer_params[:jobs_attributes]
writer_params[:genre_tags_attributes]
writer_params
writer_params[:jobs_attributes]["0"]
writer_params[:jobs_attributes][:0]
writer_params[:jobs_attributes]
writer_params[:presstype_tags_attributes]
writer_params
Writer.where(l_name: "Hartmann")
Writer.where(f_name: "Stefan")
Writer.where(user_id: writer_params[:user_id]).length
Writer.where(user_id: writer_params[:user_id])
writer_params[:user_id]
writer_params[:f_name]
writer_params
c
params
c
Writer.where(f_name: "Nathan")
Writer.where(f_name: "nathan")
 writers = Writer.where(inactive: false).where("lower(f_name || ' ' || l_name) ILIKE ?", "#{params[:q]}")
 writers = Writer.where(inactive: false).where("lower(f_name || ' ' || l_name) ILIKE ?", "%#{params[:q]}%")
writers.length
writers
writers = Writer.where(inactive: false).where("lower(f_name)", params[:q]).or(Writer.where(inactive: false).where("lower(l_name)", params[:q]))
writers = Writer.where(inactive: false).where(lower(f_name), params[:q]).or(Writer.where(inactive: false).where(lower(l_name), params[:q]))
writers = Writer.where(inactive: false).where(f_name: params[:q]).or(Writer.where(inactive: false).where(l_name: params[:q]))
writers = Writer.where(inactive: false).where(f_name || ' ' || l_name): params[:q])
writers = Writer.where(inactive: false).where("lower(f_name || ' ' || l_name) ILIKE ?", params[:q])
writers = Writer.where(inactive: false).where("lower(f_name || ' ' || l_name) ILIKE ?", "params[:q]")
writers = Writer.where(inactive: false).where("lower(f_name || ' ' || l_name) ILIKE ?", "%#{params[:q]}%")
 writers = Writer.where(inactive: false).where("lower(f_name || ' ' || l_name) ILIKE ?", "%#{params[:q]}%").distin
search = params[:q]
params[:q]
c
Writer.second.inactive
Writer.first.inactive
Writer.third.inactive
Writer.third
writers[0]
writers[0].inactive
writers.inactive
writers
writers = Writer.where(f_name: search);
search
writers = Writer.where(inactive: false).where(f_name: search);
writers = Writer.where(inactive: false).where("lower(f_name || '  ' || l_name) iLIKE ?", "%#{search}%").distinct.order(:f_name)
writers = Writer.where(inactive: false).where("lower(f_name || '  ' || l_name) iLIKE ?", "%#{search}%")
writers = Writer.where(inactive: false).where("lower(f_name || ' ' || l_name) iLIKE ?", "%#{search}%")
search = "Meka"
search = "Meka
writers = Writer.where(inactive: false).where("lower(f_name || ' ' || l_name) iLIKE ?", "%#{search}%")
search = "Joel"
writers = Writer.where(inactive: false).where("lower(l_name) ILIKE ?", "%#{search}%")
writers = Writer.where(inactive: false).where("lower(f_name || ' ' || l_name) iLIKE ?", "%#{search}%")
writers = Writer.where(inactive: false).where("lower(f_name || ' ' || l_name) ILIKE ?", "%#{search}%")
search = "zela"
Writer.where(f_name: "Joel")
writer.where(f_name: "Joel")
writers = Writer.where(inactive: false).where("lower(f_name || ' ' || l_name) ILIKE ?", "%#{search}%")
shake = "zela"
writers = Writer.where(inactive: false).where("lower(f_name || ' ' || l_name) ILIKE ?", "%#{search}%")
search = "shake"
params[:q]
writers = Writer.where(inactive: false).where("lower(f_name || ' ' || l_name) ILIKE ?", "%#{params[:q]}%")
Writer.where(inactive: false).where("lower(f_name || ' ' || l_name) ILIKE ?", "%#{params[:q]}%")
Writer.where(inactive: false).where("lower(f_name || ' ' || l_name) ILIKE ?", params[:q])
Outlet.where(inactive: false).where("name ILIKE ?", params[:q])
params[:q]
params
c
offset
c
offset
c
offset
c
offset
c
offset
c
v
offset
c
offset
c
offset
c
offset
c
offset
c
offset
c
offset
c
v
offset
c
offset
c
offset
quit
c
offset
c
offset
c
offset
c
offset
quit
offset
pffset
c
offset
c
offset
c
offset
c
offset
c
offset
c
offset
c
offset
c
offset
c
offset
c
offset
c
offset
c
offset
offset = offset.to_i
offset.is_a?String
offset.is_a?Integer
offset
params[:offset]
params
c
outlets.nil
outlets
c
User.first
c
User.first
c
current_user
params
c
params
c
param
params
c
@outlets_results
c
q
@outlets_results[0]
@outlets_results[0].jobs
@outlets_results[0]
@outlets_results.length
@outlets_results
c
params
c
params
c
params
c
params
c
params["saved_job"]["response"]
params
c
params
c
params
c
params
c
campaign_params
params
c
params
c
writer.outlets
writer.outlet
writer = Writer.last
Writer.last
Writer.last.outlet
writer
o_arr
c
o_arr
c
o_arr
outlet.writers
c
outlet.writers
c
outlet.writers
c
 outlet.writers.where(freelance: true)
c
 outlet.writers.where(freelance: true)
c
 outlet.writers.where(freelance: true)
c
 outlet.writers.where(freelance: true)
c
 outlet.writers.where(freelance: true)
c
outlet.writers.where(freelance: true)
c
o_arr
outlet.writers.where(freelance:true)
outlet
c
  @outlets.each do |outlet| if outlet.writers.where(freelance: true) o_arr.push(outlet.id) end end
outlet.writers.where(freelance: true)
o_arr
c
@outlets.each do |outlet| if outlet.writers.where(freelance: true) puts outlet end end
@outlets.each do |outlet| outlets = outlet.writers.where(freelance: true) end
@outlets.each do |outlet| outlets = outlets.writers.where(freelance: true) end
      @outlets.each do |outlet|
params
@outlets.jobs
@outlets.jobs.writer
@outlets[5].jobs
@outlets[4].jobs
@outlets[3].jobs
@outlets[0].jobs
@outlets[0].includes(:jobs)
@outlet[0].includes(:jobs)
@outlets[5].writers
@outlets[5]
@outlets[4]
@outlets[3]
@outlets[2]
@outlets[1]
@outlets[0].jobs
@outlets[0].writers
@outlets[0].writer
@outlets.jobs
@outlets
Outlet.last
